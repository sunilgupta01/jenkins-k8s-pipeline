/*

## Jenkins management
- Make sure jenkins has git plugin configured or is able to use git from system
- Add public SSH key that will be used by kops for VM access using jenkins plugin "Config File Management". This file name will be referred by input parameter SSH_PUBLIC_KEY_FILE_ID
- setup AWS CLI using "Custom tool" as part of "Global Tool Configuration"
- setup kops using "Custom tool" as part of "Global Tool Configuration"

## environment variables expected with sample values
KOPS_STATE_STORE=s3://mykops
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

## input parameters expected
CLUSTER_NAME=kopsdemo.k8s.local
BUCKET_NAME=mykops
REGION=us-east-1
REPO_URL=https://github.com/user/reponame.git
REPO_BRANCH=main
SSH_PUBLIC_KEY_FILE_ID=autogenerated_by_jenkins a23adf2-af23s-sf or provided by user at time of creation e.g. - id_rsa.pub
*/

pipeline {
    agent any
  environment {
      KOPS_HOME = tool name: 'kops', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
      AWS_CLI_HOME = tool name: 'aws-cli', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
  }
    stages {
        stage('CREATE_S3_BUCKET') {
            steps {
                   sh """#! /bin/bash
                       set -x
                       export PATH=$PATH:$AWS_CLI_HOME
                       aws s3api create-bucket --bucket ${BUCKET_NAME} --region ${REGION} --no-cli-pager
                       aws s3api put-bucket-versioning --bucket ${BUCKET_NAME} --versioning-configuration Status=Enabled --no-cli-pager 
                    """
            }
        }
        stage('KOPS_Install') {
            steps {
                // Get some code from a GitHub repository
                git branch: '${REPO_BRANCH}', url:'${REPO_URL}'

                // Run Maven on a Unix agent.
                //sh "mvn -Dmaven.test.failure.ignore=true clean package"
                // print (env.KOPS_HOME)
                configFileProvider([configFile(fileId: "$SSH_PUBLIC_KEY_FILE_ID", variable: 'ssh_pub_key')]) {
                    sh """#! /bin/bash
                       set -x
                       export PATH=$PATH:$KOPS_HOME
                       #which kops
                       ls -latr
                       echo kops name  $CLUSTER_NAME
                       kops create -f kops/cluster.yaml
                       kops create secret --name ${CLUSTER_NAME} sshpublickey admin -i $ssh_pub_key
                       kops update cluster ${CLUSTER_NAME} --yes --admin
                       kops validate cluster ${CLUSTER_NAME} --wait 10m
                    """

                }
            }
        }
    }
}
